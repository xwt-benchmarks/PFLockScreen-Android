apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'


group='com.github.thealeksandr'

final def lifecycle_version = "2.0.0"

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0.0-beta6"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        checkTypes {
            javaCompileOptions.annotationProcessorOptions.
                    classNames.add("org.checkerframework.checker.crypto.CryptoChecker")
            // Uncomment to do the strongboxbacked checking.
            // javaCompileOptions.annotationProcessorOptions.arguments.put("lint", "strongboxbacked")
            javaCompileOptions.annotationProcessorOptions.arguments.put("stubs", "hardwarebacked.astub")
        }
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}

repositories {
    mavenLocal()
}

configurations {
    errorproneJavac {
        description = 'required to run the Checker Framework.'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0-alpha01'

    //Livecycles & ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.2-alpha01'
    androidTestImplementation 'androidx.test:runner:1.1.2-alpha01'
    androidTestImplementation 'androidx.test:rules:1.1.2-alpha01'

    ext.checkerFrameworkVersion = '3.1.1'
    annotationProcessor "org.checkerframework:crypto-checker:0.1-SNAPSHOT"
    implementation files("../../../../crypto-checker-qual-android/build/libs/crypto-checker-qual-android.jar")
    compileOnly "org.checkerframework:checker-qual-android:${checkerFrameworkVersion}"
    errorproneJavac 'com.google.errorprone:javac:9+181-r4173-1'
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile).all { compile ->
        if (compile.name.contains("CheckTypes")) {
            options.fork = true
            options.forkOptions.jvmArgs += ["-Xbootclasspath/p:${configurations.errorproneJavac.asPath}"]
        }
    }
}
